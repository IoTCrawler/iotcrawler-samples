{
	"info": {
		"_postman_id": "52405a77-baec-40f1-bcd2-444ec1201848",
		"name": "Test-MetaDataRepository",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "entities",
			"item": [
				{
					"name": "/ngsi-ld/v1/entities (Test1)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/ld+json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/ld+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\":[\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld\",\n        {\n            \"Vehicle\": \"http://example.org/vehicle/Vehicle\",\n            \"brandName\": \"http://example.org/vehicle/brandName\",\n            \"speed\": \"http://example.org/vehicle/speed\"\n        }\n  ],\n  \"id\":\"urn:ngsi-ld:Vehicle:TEST1\",\n  \"type\":\"Vehicle\",\n  \"brandName\":{\n    \"type\":\"Property\",\n    \"value\":\"Mercedes\"\n  },\n  \"speed\":{\n    \"type\":\"Property\",\n    \"value\":80\n  },\n  \"location\": {\n        \"type\": \"GeoProperty\",\n        \"value\": { \"type\": \"Point\", \"coordinates\": [ -1.1336517, 37.9894006 ] }\n  }\n}"
						},
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities/",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/ngsi-ld/v1/entities  (Test11)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/ld+json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/ld+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\":[\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld\",\n        {\n            \"Vehicle\": \"http://example.org/vehicle/Vehicle\",\n            \"brandName\": \"http://example.org/vehicle/brandName\",\n            \"speed\": \"http://example.org/vehicle/speed\"\n        }\n  ],\n  \"id\":\"urn:ngsi-ld:Vehicle:TEST11\",\n  \"type\":\"Vehicle\",\n  \"brandName\":{\n    \"type\":\"Property\",\n    \"value\":\"Mercedes\"\n  },\n  \"speed\":{\n    \"type\":\"Property\",\n    \"value\":80\n  },\n    \"location\": {\n        \"type\": \"GeoProperty\",\n        \"value\": { \"type\": \"Point\", \"coordinates\": [ -2.1336517, 38.9894006 ] }\n  }\n}"
						},
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities/",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/ngsi-ld/v1/entities",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/ld+json",
								"type": "text"
							},
							{
								"key": "Accept",
								"name": "Content-Type",
								"type": "text",
								"value": "application/ld+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\":[\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld\",\n        {\n            \"Vehicle\": \"http://example.org/vehicle/Vehicle\",\n            \"brandName\": \"http://example.org/vehicle/brandName\",\n            \"speed\": \"http://example.org/vehicle/speed\"\n        }\n    ],\n\t\"brandName\":{\n       \"type\":\"Property\",\n       \"value\":\"Seat\"\n    },\n    \"speed\": {\n        \"type\": \"Property\",\n        \"value\": 5\n    }\n    \n}"
						},
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities/urn:ngsi-ld:Vehicle:TEST1/attrs",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:Vehicle:TEST1",
								"attrs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve specific entity (Test1)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"name": "Content-Type",
								"type": "text",
								"value": "application/ld+json"
							},
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities/urn:ngsi-ld:Vehicle:TEST1",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:Vehicle:TEST1"
							]
						},
						"description": "Retrieve specific entity from kafka"
					},
					"response": []
				},
				{
					"name": "Retrieve specific entity (Test11)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"name": "Content-Type",
								"type": "text",
								"value": "application/ld+json"
							},
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities/urn:ngsi-ld:Vehicle:TEST11",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:Vehicle:TEST11"
							]
						},
						"description": "Retrieve specific entity from kafka"
					},
					"response": []
				},
				{
					"name": "Retrieve specific type (Vehicle)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"name": "Content-Type",
								"type": "text",
								"value": "application/ld+json"
							},
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities/?type=http://example.org/vehicle/Vehicle",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "http://example.org/vehicle/Vehicle"
								}
							]
						},
						"description": "Retrieve specific entity from kafka"
					},
					"response": []
				},
				{
					"name": "/ngsi-ld/v1/entities (Test1)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities/urn:ngsi-ld:Vehicle:TEST1",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:Vehicle:TEST1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ngsi-ld/v1/entities (Test11)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities/urn:ngsi-ld:Vehicle:TEST11",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:Vehicle:TEST11"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "subscriptions",
			"item": [
				{
					"name": "/ngsi-ld/v1/subscriptions (keyvalues)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"name": "Content-Type",
								"value": "application/ld+json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/ld+json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": [\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld\",\n        {\n            \"Vehicle\": \"http://example.org/vehicle/Vehicle\",\n            \"brandName\": \"http://example.org/vehicle/brandName\",\n            \"speed\": \"http://example.org/vehicle/speed\"\n        }\n    ],\n    \"id\": \"urn:ngsi-ld:Subscription:1_keyValues\",\n    \"type\": \"Subscription\",\n    \"entities\": [\n        {\n        \t\"type\": \"Vehicle\"\n        }\n    ],\n    \"watchedAttributes\": [\"brandName\"],\n    \"notification\": {\n        \"attributes\": [\"speed\"],\n        \"format\": \"keyValues\",\n        \"endpoint\": {\n            \"uri\": \"http://155.54.99.118:1030/notificationToLDClien\",\n            \"accept\": \"application/ld+json\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/subscriptions",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ngsi-ld/v1/subscriptions (normalized)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"name": "Content-Type",
								"type": "text",
								"value": "application/ld+json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": [\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld\",\n        {\n            \"Vehicle\": \"http://example.org/vehicle/Vehicle\",\n            \"brandName\": \"http://example.org/vehicle/brandName\",\n            \"speed\": \"http://example.org/vehicle/speed\"\n        }\n    ],\n    \"id\": \"urn:ngsi-ld:Subscription:1_normalized\",\n    \"type\": \"Subscription\",\n    \"entities\": [\n        {\n        \t\"type\": \"Vehicle\"\n        }\n    ],\n    \"watchedAttributes\": [\"brandName\"],\n    \"notification\": {\n        \"attributes\": [\"speed\"],\n        \"format\": \"normalized\",\n        \"endpoint\": {\n            \"uri\": \"http://155.54.99.118:1030/notificationToLDClien\",\n            \"accept\": \"application/ld+json\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/subscriptions",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ngsi-ld/v1/subscriptions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/ld+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/subscriptions/",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"subscriptions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/ngsi-ld/v1/subscriptions (keyValues)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/ld+json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:1_keyValues",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"subscriptions",
								"urn:ngsi-ld:Subscription:1_keyValues"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ngsi-ld/v1/subscriptions (normalized)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/ld+json",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:1_normalized",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"subscriptions",
								"urn:ngsi-ld:Subscription:1_normalized"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Geoqueries",
			"item": [
				{
					"name": "Near",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							},
							{
								"key": "Link",
								"value": "<http://192.168.56.101:8000/index.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities?geoproperty=location&georel=near;maxDistance==360&geometry=Point&type=http://example.org/vehicle/Vehicle&coordinates=%5B-1.1336517%2C37.9894006%5D",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "geoproperty",
									"value": "location"
								},
								{
									"key": "georel",
									"value": "near;maxDistance==360"
								},
								{
									"key": "geometry",
									"value": "Point"
								},
								{
									"key": "coordinates",
									"value": "%5B8.684783577919006%2C49.406131991436396%5D",
									"disabled": true
								},
								{
									"key": "type",
									"value": "http://example.org/vehicle/Vehicle"
								},
								{
									"key": "coordinates",
									"value": "%5B-1.1336517%2C37.9894006%5D"
								}
							]
						},
						"description": "Get every entity near NEC Labs Heidelberg, with distance up to 360 meters\r\n    NEC Labs Heidelberg coordinates: 8.684783577919006, 49.406131991436396"
					},
					"response": []
				},
				{
					"name": "Near minDistance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities?geoproperty=location&georel=near;minDistance==400&geometry=Point&coordinates=%5B-1.1336517%2C37.9894006%5D&type=http://example.org/vehicle/Vehicle",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "geoproperty",
									"value": "location"
								},
								{
									"key": "georel",
									"value": "near;minDistance==400"
								},
								{
									"key": "geometry",
									"value": "Point"
								},
								{
									"key": "coordinates",
									"value": "%5B-1.1336517%2C37.9894006%5D"
								},
								{
									"key": "type",
									"value": "http://example.org/vehicle/Vehicle"
								}
							]
						},
						"description": "Get every entity near NEC Labs Heidelberg, with distance over 400 meters"
					},
					"response": []
				},
				{
					"name": "Near Polygon",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities?geoproperty=location&georel=near;minDistance==400&geometry=Polygon&coordinates=%5B%5B%5B-2.0%2C38.0%5D%2C%5B-2.0%2C0.0%5D%2C%5B0.0%2C0.0%5D%2C%5B0.0%2C38.0%5D%5D%5D&type=http://example.org/vehicle/Vehicle",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "geoproperty",
									"value": "location"
								},
								{
									"key": "georel",
									"value": "near;minDistance==400"
								},
								{
									"key": "geometry",
									"value": "Polygon"
								},
								{
									"key": "coordinates",
									"value": "%5B%5B%5B-2.0%2C38.0%5D%2C%5B-2.0%2C0.0%5D%2C%5B0.0%2C0.0%5D%2C%5B0.0%2C38.0%5D%5D%5D"
								},
								{
									"key": "type",
									"value": "http://example.org/vehicle/Vehicle"
								}
							]
						},
						"description": "Get every entity near NEC building (polygon), with distance up to 360 meters"
					},
					"response": []
				},
				{
					"name": "Within",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities?geoproperty=location&georel=within&geometry=Polygon&coordinates=%5B%5B%5B8.684628009796143%2C49.406062179606515%5D%2C%5B8.685507774353027%2C49.4062262372493%5D%2C%5B8.68545413017273%2C49.40634491690448%5D%2C%5B8.684579730033875%2C49.40617736907259%5D%2C%5B8.684628009796143%2C49.406062179606515%5D%5D%5D&type=http://example.org/vehicle/Vehicle",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "geoproperty",
									"value": "location"
								},
								{
									"key": "georel",
									"value": "within"
								},
								{
									"key": "geometry",
									"value": "Polygon"
								},
								{
									"key": "coordinates",
									"value": "%5B%5B%5B8.684628009796143%2C49.406062179606515%5D%2C%5B8.685507774353027%2C49.4062262372493%5D%2C%5B8.68545413017273%2C49.40634491690448%5D%2C%5B8.684579730033875%2C49.40617736907259%5D%2C%5B8.684628009796143%2C49.406062179606515%5D%5D%5D"
								},
								{
									"key": "type",
									"value": "http://example.org/vehicle/Vehicle"
								}
							]
						},
						"description": "Get every entity within NEC Labs building (polygon) in Heidelberg"
					},
					"response": []
				},
				{
					"name": "Contains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities?geoproperty=location&georel=contains&geometry=Point&coordinates=%5B-1.1336517%2C37.9894006%5D&type=http://example.org/vehicle/Vehicle",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "geoproperty",
									"value": "location"
								},
								{
									"key": "georel",
									"value": "contains"
								},
								{
									"key": "geometry",
									"value": "Point"
								},
								{
									"key": "coordinates",
									"value": "%5B-1.1336517%2C37.9894006%5D"
								},
								{
									"key": "type",
									"value": "http://example.org/vehicle/Vehicle"
								}
							]
						},
						"description": "Get every entity that contains NEC Labs Heidelberg (point)"
					},
					"response": []
				},
				{
					"name": "Overlaps",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities?geoproperty=location&georel=overlaps&geometry=Polygon&coordinates=%5B%5B%5B-2.0%2C38.0%5D%2C%5B-2.0%2C0.0%5D%2C%5B0.0%2C0.0%5D%2C%5B0.0%2C38.0%5D%5D%5D&type=http://example.org/vehicle/Vehicle",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "geoproperty",
									"value": "location"
								},
								{
									"key": "georel",
									"value": "overlaps"
								},
								{
									"key": "geometry",
									"value": "Polygon"
								},
								{
									"key": "coordinates",
									"value": "%5B%5B%5B-2.0%2C38.0%5D%2C%5B-2.0%2C0.0%5D%2C%5B0.0%2C0.0%5D%2C%5B0.0%2C38.0%5D%5D%5D"
								},
								{
									"key": "type",
									"value": "http://example.org/vehicle/Vehicle"
								}
							]
						},
						"description": "Get every entity that overlaps with NEC Labs building (polygon) in Heidelberg"
					},
					"response": []
				},
				{
					"name": "Intersects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities?geoproperty=location&georel=intersects&geometry=Polygon&coordinates=%5B%5B%5B-2.0%2C38.0%5D%2C%5B-2.0%2C0.0%5D%2C%5B0.0%2C0.0%5D%2C%5B0.0%2C38.0%5D%5D%5D&type=http://example.org/vehicle/Vehicle",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "geoproperty",
									"value": "location"
								},
								{
									"key": "georel",
									"value": "intersects"
								},
								{
									"key": "geometry",
									"value": "Polygon"
								},
								{
									"key": "coordinates",
									"value": "%5B%5B%5B-2.0%2C38.0%5D%2C%5B-2.0%2C0.0%5D%2C%5B0.0%2C0.0%5D%2C%5B0.0%2C38.0%5D%5D%5D"
								},
								{
									"key": "type",
									"value": "http://example.org/vehicle/Vehicle"
								}
							]
						},
						"description": "Get every entity that intersects with NEC Labs building (polygon) in Heidelberg\r\n   Intersects(g1, g2 ) == Not (Disjoint(g1, g2 ))"
					},
					"response": []
				},
				{
					"name": "Equals",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities?geoproperty=location&georel=equals&geometry=Point&coordinates=%5B-1.1336517%2C37.9894006%5D&type=http://example.org/vehicle/Vehicle",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "geoproperty",
									"value": "location"
								},
								{
									"key": "georel",
									"value": "equals"
								},
								{
									"key": "geometry",
									"value": "Point"
								},
								{
									"key": "coordinates",
									"value": "%5B-1.1336517%2C37.9894006%5D"
								},
								{
									"key": "type",
									"value": "http://example.org/vehicle/Vehicle"
								}
							]
						},
						"description": "get every entity equal to NEC Labs Heidelberg point"
					},
					"response": []
				},
				{
					"name": "Disjoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							}
						],
						"url": {
							"raw": "http://{{MDR-IP}}:{{MDR-Port}}/ngsi-ld/v1/entities?geoproperty=location&georel=disjoint&geometry=Polygon&coordinates=%5B%5B%5B-2.0%2C38.0%5D%2C%5B-2.0%2C0.0%5D%2C%5B0.0%2C0.0%5D%2C%5B0.0%2C38.0%5D%5D%5D&type=http://example.org/vehicle/Vehicle",
							"protocol": "http",
							"host": [
								"{{MDR-IP}}"
							],
							"port": "{{MDR-Port}}",
							"path": [
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "geoproperty",
									"value": "location"
								},
								{
									"key": "georel",
									"value": "disjoint"
								},
								{
									"key": "geometry",
									"value": "Polygon"
								},
								{
									"key": "coordinates",
									"value": "%5B%5B%5B-2.0%2C38.0%5D%2C%5B-2.0%2C0.0%5D%2C%5B0.0%2C0.0%5D%2C%5B0.0%2C38.0%5D%5D%5D"
								},
								{
									"key": "type",
									"value": "http://example.org/vehicle/Vehicle"
								}
							]
						},
						"description": "get entities that do not share any space together with NEC Labs Heidelberg building"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}